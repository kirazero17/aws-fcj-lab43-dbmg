-- set current schema to dms_sample
alter session set current_schema=dms_sample;
select sys_context( 'userenv', 'current_schema' ) from dual;

-- Create Posts Table
CREATE TABLE Posts (
    Id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    PostTypeId NUMBER NOT NULL,
    AcceptedAnswerId NUMBER,
    ParentId NUMBER,
    CreationDate DATE NOT NULL,
    DeletionDate DATE,
    Score NUMBER NOT NULL,
    ViewCount NUMBER,
    Body NVARCHAR2(800),
    OwnerUserId NUMBER,
    OwnerDisplayName NVARCHAR2(40),
    LastEditorUserId NUMBER,
    LastEditorDisplayName NVARCHAR2(40),
    LastEditDate DATE,
    LastActivityDate DATE,
    Title NVARCHAR2(250),
    Tags NVARCHAR2(250),
    AnswerCount NUMBER,
    CommentCount NUMBER,
    FavoriteCount NUMBER,
    ClosedDate DATE,
    CommunityOwnedDate DATE
);

-- Create Users Table
CREATE TABLE Users (
    Id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Reputation NUMBER NOT NULL,
    CreationDate DATE NOT NULL,
    DisplayName NVARCHAR2(40),
    LastAccessDate DATE NOT NULL,
    WebsiteUrl NVARCHAR2(200),
    Location NVARCHAR2(100),
    AboutMe NVARCHAR2(800),
    Views NUMBER NOT NULL,
    UpVotes NUMBER NOT NULL,
    DownVotes NUMBER NOT NULL,
    ProfileImageUrl NVARCHAR2(200),
    EmailHash NVARCHAR2(32),
    AccountId NUMBER
);

-- Create Votes Table
CREATE TABLE Votes (
    Id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    PostId NUMBER NOT NULL,
    VoteTypeId NUMBER NOT NULL,
    UserId NUMBER,
    CreationDate DATE,
    BountyAmount NUMBER
);

-- Function to generate random string
CREATE OR REPLACE FUNCTION random_string(length IN NUMBER) RETURN NVARCHAR2 IS
    v_string NVARCHAR2(4000) := '';
BEGIN
    FOR i IN 1 .. length LOOP
        v_string := v_string || CHR(TRUNC(DBMS_RANDOM.VALUE(65, 128)));
    END LOOP;
    RETURN v_string;
END;
/

-- Procedure to add rows to Posts
CREATE OR REPLACE PROCEDURE addRowsPosts (rowsNumber IN NUMBER) IS
BEGIN
    FOR i IN 1 .. rowsNumber LOOP
        INSERT INTO Posts (
            PostTypeId, AcceptedAnswerId, ParentId, CreationDate, DeletionDate,
            Score, ViewCount, Body, OwnerUserId, OwnerDisplayName,
            LastEditorUserId, LastEditorDisplayName, LastEditDate,
            LastActivityDate, Title, Tags, AnswerCount, CommentCount,
            FavoriteCount, ClosedDate, CommunityOwnedDate
        ) VALUES (
            TRUNC(DBMS_RANDOM.VALUE(1, 256)), 
            TRUNC(DBMS_RANDOM.VALUE(0, 1000)), 
            TRUNC(DBMS_RANDOM.VALUE(0, 1000)), 
            SYSDATE - TRUNC(DBMS_RANDOM.VALUE(0, 1000)), 
            SYSDATE + TRUNC(DBMS_RANDOM.VALUE(0, 1000)), 
            TRUNC(DBMS_RANDOM.VALUE(0, 100)), 
            TRUNC(DBMS_RANDOM.VALUE(0, 10000)), 
            random_string(TRUNC(DBMS_RANDOM.VALUE(0, 150))), 
            TRUNC(DBMS_RANDOM.VALUE(0, 100000)), 
            random_string(TRUNC(DBMS_RANDOM.VALUE(0, 20))),
            TRUNC(DBMS_RANDOM.VALUE(0, 100000)), 
            random_string(TRUNC(DBMS_RANDOM.VALUE(0, 20))),
            SYSDATE - TRUNC(DBMS_RANDOM.VALUE(0, 100)), 
            SYSDATE - TRUNC(DBMS_RANDOM.VALUE(0, 100)), 
            random_string(TRUNC(DBMS_RANDOM.VALUE(0, 30))), 
            random_string(TRUNC(DBMS_RANDOM.VALUE(0, 20))), 
            TRUNC(DBMS_RANDOM.VALUE(0, 10000)), 
            TRUNC(DBMS_RANDOM.VALUE(0, 100000)), 
            TRUNC(DBMS_RANDOM.VALUE(0, 10000)), 
            SYSDATE - TRUNC(DBMS_RANDOM.VALUE(0, 100)), 
            SYSDATE - TRUNC(DBMS_RANDOM.VALUE(0, 100))
        );
    END LOOP;
END;
/

-- Procedure to add rows to Users
CREATE OR REPLACE PROCEDURE addRowsUsers (rowsNumber IN NUMBER) IS
BEGIN
    FOR i IN 1 .. rowsNumber LOOP
        INSERT INTO Users (
            Reputation, CreationDate, DisplayName, LastAccessDate, 
            WebsiteUrl, Location, AboutMe, Views, UpVotes, 
            DownVotes, ProfileImageUrl, EmailHash, AccountId
        ) VALUES (
            TRUNC(DBMS_RANDOM.VALUE(0, 10000)), 
            SYSDATE - TRUNC(DBMS_RANDOM.VALUE(0, 1000)), 
            random_string(TRUNC(DBMS_RANDOM.VALUE(0, 30))), 
            SYSDATE - TRUNC(DBMS_RANDOM.VALUE(0, 1000)), 
            NULL, NULL, NULL, 
            TRUNC(DBMS_RANDOM.VALUE(0, 10000)), 
            TRUNC(DBMS_RANDOM.VALUE(0, 1000)), 
            TRUNC(DBMS_RANDOM.VALUE(0, 1000)), 
            NULL, random_string(TRUNC(DBMS_RANDOM.VALUE(0, 30))), 
            TRUNC(DBMS_RANDOM.VALUE(0, 10000))
        );
    END LOOP;
END;
/

-- Procedure to add rows to Votes
CREATE OR REPLACE PROCEDURE addRowsVotes (rowsNumber IN NUMBER) IS
BEGIN
    FOR i IN 1 .. rowsNumber LOOP
        INSERT INTO Votes (
            PostId, VoteTypeId, UserId, CreationDate, BountyAmount
        ) VALUES (
            TRUNC(DBMS_RANDOM.VALUE(0, 1000000)), 
            TRUNC(DBMS_RANDOM.VALUE(1, 256)), 
            TRUNC(DBMS_RANDOM.VALUE(0, 10000)), 
            SYSDATE - TRUNC(DBMS_RANDOM.VALUE(0, 1000)), 
            TRUNC(DBMS_RANDOM.VALUE(0, 10000))
        );
    END LOOP;
END;
/

-- Throttle procedure
CREATE OR REPLACE PROCEDURE usp_RandomQ (query_count IN NUMBER) IS
BEGIN
    FOR iteration IN 1 .. query_count LOOP
        DECLARE
            Id NUMBER := TRUNC(DBMS_RANDOM.VALUE(0, 10000000));
        BEGIN
            IF MOD(Id, 12) = 0 THEN
                addRowsPosts(10000);
            ELSIF MOD(Id, 11) = 0 THEN
                addRowsVotes(10000);
            ELSIF MOD(Id, 10) = 0 THEN
                addRowsUsers(1000);
            ELSIF MOD(Id, 9) = 0 THEN
                addRowsPosts(10000);
            ELSIF MOD(Id, 8) = 0 THEN
                addRowsVotes(10000);
            ELSIF MOD(Id, 7) = 0 THEN
                addRowsUsers(1000);
            ELSIF MOD(Id, 6) = 0 THEN
                addRowsPosts(10000);
            ELSIF MOD(Id, 5) = 0 THEN
                addRowsVotes(10000);
            ELSIF MOD(Id, 4) = 0 THEN
                addRowsPosts(10000);
            ELSIF MOD(Id, 3) = 0 THEN
                addRowsVotes(10000);
            ELSIF MOD(Id, 2) = 0 THEN
                addRowsUsers(1000);
            END IF;
        END;
            COMMIT;
    END LOOP;
END;
/

-- 